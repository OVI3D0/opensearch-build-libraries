/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

pipeline {
    agent none
    stages {
        stage('compare-test') {
            parallel {
                stage('test-with-all-args') {
                    steps {
                        script {
                            runBenchmarkTestScript(command: COMMAND,
                            bundleManifest: BUNDLE_MANIFEST,
                            distributionUrl: DISTRIBUTION_URL,
                            distributionVersion: DISTRIBUTION_VERSION,
                            workload: TEST_WORKLOAD,
                            insecure: "false",
                            singleNode: SINGLE_NODE_CLUSTER,
                            minDistribution: MIN_DISTRIBUTION,
                            use50PercentHeap: USE_50_PERCENT_HEAP,
                            enableRemoteStore: ENABLE_REMOTE_STORE,
                            suffix: "${env.BUILD_NUMBER}-secure",
                            managerNodeCount: MANAGER_NODE_COUNT,
                            dataNodeCount: DATA_NODE_COUNT,
                            clientNodeCount: CLIENT_NODE_COUNT,
                            ingestNodeCount: INGEST_NODE_COUNT,
                            mlNodeCount: ML_NODE_COUNT,
                            dataInstanceType: DATA_INSTANCE_TYPE,
                            userTag: USER_TAGS.isEmpty() ? "security-enabled:true" : "${USER_TAGS},security-enabled:true",
                            workloadParams: WORKLOAD_PARAMS,
                            testProcedure: TEST_PROCEDURE,
                            excludeTasks: EXCLUDE_TASKS,
                            includeTasks: INCLUDE_TASKS,
                            additionalConfig: ADDITIONAL_CONFIG,
                            dataStorageSize: DATA_NODE_STORAGE,
                            mlStorageSize: ML_NODE_STORAGE,
                            jvmSysProps: JVM_SYS_PROPS,
                            captureNodeStat: CAPTURE_NODE_STAT,
                            captureSegmentReplicationStat: CAPTURE_SEGMENT_REPLICATION_STAT,
                            telemetryParams: TELEMETRY_PARAMS,
                            baseline: BASELINE,
                            contender: CONTENDER,
                            results_format: RESULTS_FORMAT,
                            results_numbers_align: RESULTS_NUMBERS_ALIGN,
                            results_file: RESULTS_FILE,
                            show_in_results: SHOW_IN_RESULTS
                            )
                        }
                    }
                }
                stage('test-with-base-args') {
                    steps {
                        script {
                            runBenchmarkTestScript(command: COMMAND,
                            bundleManifest: BUNDLE_MANIFEST,
                            distributionUrl: DISTRIBUTION_URL,
                            distributionVersion: DISTRIBUTION_VERSION,
                            workload: TEST_WORKLOAD,
                            insecure: "false",
                            singleNode: SINGLE_NODE_CLUSTER,
                            minDistribution: MIN_DISTRIBUTION,
                            use50PercentHeap: USE_50_PERCENT_HEAP,
                            enableRemoteStore: ENABLE_REMOTE_STORE,
                            suffix: "${env.BUILD_NUMBER}-secure",
                            managerNodeCount: MANAGER_NODE_COUNT,
                            dataNodeCount: DATA_NODE_COUNT,
                            clientNodeCount: CLIENT_NODE_COUNT,
                            ingestNodeCount: INGEST_NODE_COUNT,
                            mlNodeCount: ML_NODE_COUNT,
                            dataInstanceType: DATA_INSTANCE_TYPE,
                            userTag: USER_TAGS.isEmpty() ? "security-enabled:true" : "${USER_TAGS},security-enabled:true",
                            workloadParams: WORKLOAD_PARAMS,
                            testProcedure: TEST_PROCEDURE,
                            excludeTasks: EXCLUDE_TASKS,
                            includeTasks: INCLUDE_TASKS,
                            additionalConfig: ADDITIONAL_CONFIG,
                            dataStorageSize: DATA_NODE_STORAGE,
                            mlStorageSize: ML_NODE_STORAGE,
                            jvmSysProps: JVM_SYS_PROPS,
                            captureNodeStat: CAPTURE_NODE_STAT,
                            captureSegmentReplicationStat: CAPTURE_SEGMENT_REPLICATION_STAT,
                            telemetryParams: TELEMETRY_PARAMS,
                            baseline: BASELINE,
                            contender: CONTENDER
                            )
                        }
                    }
                }
            }
        }
    }
}